{"version":3,"sources":["js/vm-navbar.js","js/vm-select-fields.js","js/vm-main.js","js/scripts.js"],"names":["Vue","component","template","name","data","startTime","endTime","times","label","val","methods","getToday","today","Date","getFullYear","getMonth","getDate","created","computed","startTimeParsed","parse","endTimeParsed","totalTime","properHours","watch","myval","myData","props","doMethod","console","log","axios","get","then","res","vm","el"],"mappings":";AAAAA,IAAIC,UAAU,SAAU,CACtBC,SADsB,iFAOtBC,KAAM,SACNC,KAAO,WACE,MAAA;;ACTXJ,IAAIC,UAAU,gBACd,CACEC,SAAU,iBACVE,KAAO,WACE,MAAA,CACLC,UAAW,QACXC,QAAS,QACTC,MAAO,CACL,CAAEC,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,WAAYC,IAAK,SAC1B,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,SACzB,CAAED,MAAO,UAAWC,IAAK,YAK/BC,QAAS,CACPC,SAAW,WACLC,IAAAA,EAAQ,IAAIC,KACND,MAAAA,GAAAA,OAAAA,EAAME,cAAiBF,KAAAA,OAAAA,EAAMG,WAAW,EAAKH,KAAAA,OAAAA,EAAMI,aAGjEC,QAAU,aAGVC,SAAU,CACRC,gBAAiB,WACRN,OAAAA,KAAKO,MAAS,GAAA,OAAA,KAAKT,WAAc,KAAA,OAAA,KAAKN,aAE/CgB,cAAe,WACNR,OAAAA,KAAKO,MAAS,GAAA,OAAA,KAAKT,WAAc,KAAA,OAAA,KAAKL,WAE/CgB,UAAW,WACF,OAAC,KAAKD,cAAgB,KAAKF,iBAAmB,IAAO,GAAK,IAEnEI,YAAa,WACP,OAAA,KAAKD,UAAY,GAAK,KAAKA,WAAa,EACnC,KACA,KAAKA,UAAY,EACjB,MAEA,KAGbE,MAAO,CACLnB,UAAW,WACL,KAAKc,gBAAkB,KAAKE,gBAC9B,KAAKf,QAAU,KAAKD,YAExBC,QAAS,WACH,KAAKa,gBAAkB,KAAKE,gBAC9B,KAAKf,QAAU,KAAKD;;ACxE5BL,IAAIC,UAAU,WACd,CACEC,SAAU,YACVE,KAAO,WACE,MAAA,CACLqB,MAAO,MACPC,OAAQ,KAGZC,MAAO,CACL,WAEFjB,QAAS,CACPkB,SAAW,WACTC,QAAQC,IAAgB,YAAA,OAAA,KAAKL,UAGjCR,QAAU,WAAA,IAAA,EAAA,KACRc,MAAMC,IAAI,2BACPC,KAAK,SAAAC,GAAO,OAAA,EAAKR,OAASQ,EAAI9B,UAOrC,IAAM+B,EAAK,IAAInC,IAAI,CACjBoC,GAAI;;AC3BN,aAFA,QAAA,kBACA,QAAA,yBACA,QAAA","file":"scripts.d9c3a890.js","sourceRoot":"..","sourcesContent":["Vue.component('navbar', {\n  template: `\n<nav>\n  <a href=\"/\">Home</a>\n  <a href=\"/forms.html\">Forms</a>\n</nav>\n  `,\n  name: \"navbar\",\n  data() {\n    return {\n\n    }\n  },\n})","Vue.component('select-fields',\n{\n  template: '#select-fields',\n  data() {\n    return {\n      startTime: '08:15',\n      endTime: '09:00',\n      times: [\n        { label: '8:00 am', val: '08:00' },\n        { label: '8:15 am', val: '08:15' },\n        { label: '8:30 am', val: '08:30' },\n        { label: '8:45 am', val: '08:45' },\n        { label: '9:00 am', val: '09:00' },\n        { label: '9:15 am', val: '09:15' },\n        { label: '9:30 am', val: '09:30' },\n        { label: '9:45 am', val: '09:45' },\n        { label: '10:00 am', val: '10:00' },\n        { label: '10:15 am', val: '10:15' },\n        { label: '10:30 am', val: '10:30' },\n        { label: '10:45 am', val: '10:45' },\n        { label: '11:00 am', val: '11:00' },\n        { label: '11:15 am', val: '11:15' },\n        { label: '11:30 am', val: '11:30' },\n        { label: '11:45 am', val: '11:45' },\n        { label: '12:00 pm', val: '12:00' },\n        { label: '12:15 pm', val: '12:15' },\n        { label: '12:30 pm', val: '12:30' },\n        { label: '12:45 pm', val: '12:45' },\n        { label: '1:00 pm', val: '13:00' },\n        { label: '1:15 pm', val: '13:15' },\n        { label: '1:30 pm', val: '13:30' },\n        { label: '1:45 pm', val: '13:45' },\n        { label: '2:00 pm', val: '14:00' },\n        { label: '2:15 pm', val: '14:15' },\n        { label: '2:30 pm', val: '14:30' },\n        { label: '2:45 pm', val: '14:45' },\n\n      ]\n    }\n  },\n  methods: {\n    getToday() {\n      let today = new Date()\n      return `${today.getFullYear()}-${today.getMonth()+1}-${today.getDate()}`\n    }\n  },\n  created() {\n\n  },\n  computed: {\n    startTimeParsed: function() {\n      return Date.parse(`${this.getToday()} ${this.startTime}`)\n    },\n    endTimeParsed: function() {\n      return Date.parse(`${this.getToday()} ${this.endTime}`)\n    },\n    totalTime: function() {\n      return (this.endTimeParsed - this.startTimeParsed) / 1000 / 60 / 60\n    },\n    properHours: function() {\n      if (this.totalTime > 0 && this.totalTime <= 1)\n        return 'hr'\n      else if (this.totalTime > 1)\n        return 'hrs'\n      else\n        return ''\n    },\n  },\n  watch: {\n    startTime: function() {\n      if (this.startTimeParsed > this.endTimeParsed)\n        this.endTime = this.startTime\n    },\n    endTime: function() {\n      if (this.startTimeParsed > this.endTimeParsed)\n        this.endTime = this.startTime\n    }\n  }\n})","\n// template markup will be in the calling .html file\n// by adding 'inline-template' param to the component tag\nVue.component('greeting',\n{\n  template: '#greeting',\n  data() {\n    return {\n      myval: 'one',\n      myData: []\n    }\n  },\n  props: [\n    'newprop'\n  ],\n  methods: {\n    doMethod() {\n      console.log(`myval is ${this.myval}`)\n    }\n  },\n  created() {\n    axios.get('./js/data/testdata.json')\n      .then(res => this.myData = res.data)\n  }\n})\n\n/* ----------------------------------------\n  Render main app\n---------------------------------------- */\nconst vm = new Vue({\n  el: '#app'\n})\n","// parcel imports\nimport './vm-navbar.js'\nimport './vm-select-fields.js'\nimport './vm-main.js'\n"]}